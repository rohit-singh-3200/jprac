
-- Assume two tables: students and departments

-- Table: students
-- Columns: student_id, name, age, department_id

-- Table: departments
-- Columns: department_id, department_name

-- INNER JOIN: Returns only matching rows
SELECT students.name, departments.department_name
FROM students
INNER JOIN departments ON students.department_id = departments.department_id;

-- LEFT JOIN (LEFT OUTER JOIN): All students, even if no matching department
SELECT students.name, departments.department_name
FROM students
LEFT JOIN departments ON students.department_id = departments.department_id;

-- RIGHT JOIN (RIGHT OUTER JOIN): All departments, even if no students
SELECT students.name, departments.department_name
FROM students
RIGHT JOIN departments ON students.department_id = departments.department_id;

-- FULL OUTER JOIN: All records from both tables (use UNION in MySQL)
SELECT students.name, departments.department_name
FROM students
LEFT JOIN departments ON students.department_id = departments.department_id
UNION
SELECT students.name, departments.department_name
FROM students
RIGHT JOIN departments ON students.department_id = departments.department_id;

-- CROSS JOIN: Cartesian product (all combinations)
SELECT students.name, departments.department_name
FROM students
CROSS JOIN departments;

-- NATURAL JOIN: Automatically joins on columns with same name (MySQL doesn't support this directly)
-- Simulating NATURAL JOIN (assuming both tables have department_id)
SELECT students.name, departments.department_name
FROM students
JOIN departments USING (department_id);
